name: "aws-github-repository"

# Canonical GitHub repo
github_repo: "cloudposse-terraform-components/aws-github-repository"

# Short description of this project
description: |-
  Provision a GitHub repository and set repository secrets and variables from AWS Secrets Manager and AWS Systems Manager Parameter Store.

usage: |-
  **Stack Level**: Regional

  Here's an example snippet for how to use this component.
  ```yaml
  components:
    terraform:
      example/aws-github-repository:
        vars:
          enabled: true
          owner: acme-github-org
          repository:
            name: "my-repository"
            description: "My repository"
            homepage_url: "http://example.com/"
            topics:
              - terraform
              - github
              - test
          default_branch: "main"
          secrets:
            MY_SECRET: "my-secret-value"
            MY_SECRET_2: "nacl:dGVzdC12YWx1ZS0yCg=="
            MY_SECRET_3: "ssm:/my/secret/path"
            MY_SECRET_4: "sm:secret-name"
          variables:
            MY_VARIABLE: "my-variable-value"
            MY_VARIABLE_2: "ssm:/my/variable/path"
            MY_VARIABLE_3: "sm:variable-name"
  ```

  ## Secrets and variables

  The component supports setting repository and environment secrets and variables. 
  Secrets and variables can be set using the following methods:
  - Raw values (unencrypted string) (example: `my-secret-value`)
  - AWS Secrets Manager (SM) (example: `sm:secret-name`)
  - AWS Systems Manager Parameter Store (SSM) (example: `ssm:/my/secret/path`)

  In addition to that secrets supports base64 encoded values [encrypted](https://docs.github.com/en/rest/guides/encrypting-secrets-for-the-rest-api?apiVersion=2022-11-28) 
  with [repository key](https://docs.github.com/en/rest/actions/secrets?apiVersion=2022-11-28#get-a-repository-public-key).
  The value should be prefixed with `nacl:` (example: `nacl:dGVzdC12YWx1ZS0yCg==`).

  ## Import mode

  The component supports importing existing repository and it's configs:
  - collaborators
  - variables
  - environments
  - environment variables
  - labels
  - custom properties values
  - autolink references
  - deploy keys

  Import mode is enabled by setting `import` input variable to `true`.

  The following configs are not supported for import:
  - secrets
  - environment secrets
  - branch protection policies
  - rulesets

  <!-- prettier-ignore-start -->
  <!-- BEGINNING OF PRE-COMMIT-TERRAFORM DOCS HOOK -->
  <!-- END OF PRE-COMMIT-TERRAFORM DOCS HOOK -->
  <!-- prettier-ignore-end -->

tags:
  - terraform
  - aws
  - github
  - terraform-components

# Categories of this project
categories:
  - terraform-modules/root
  - terraform-components

# License of this project
license: "APACHE2"

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/cloudposse-terraform-components/aws-github-repository.svg?style=for-the-badge"
    url: "https://github.com/cloudposse-terraform-components/aws-github-repository/releases/latest"
  - name: "Slack Community"
    image: "https://slack.cloudposse.com/for-the-badge.svg"
    url: "https://slack.cloudposse.com"

references:
  - name: "Cloud Posse Documentation"
    description: "Complete documentation for the Cloud Posse solution"
    url: "https://docs.cloudposse.com"
  - name: "Reference Architectures"
    description: "Launch effortlessly with our turnkey reference architectures, built either by your team or ours."
    url: "https://cloudposse.com/"

related:
- name: "Cloud Posse Terraform Modules"
  description: Our collection of reusable Terraform modules used by our reference architectures.
  url: "https://docs.cloudposse.com/modules/"
- name: "Atmos"
  description: "Atmos is like docker-compose but for your infrastructure"
  url: "https://atmos.tools"

contributors: [] # If included generates contribs




